

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Nov 28 17:34:14 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  000D                     	;# 
    40  000E                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  008E                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  0111                     	;# 
    74  0112                     	;# 
    75  0113                     	;# 
    76  0114                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011D                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  018E                     	;# 
    86  0191                     	;# 
    87  0191                     	;# 
    88  0192                     	;# 
    89  0193                     	;# 
    90  0193                     	;# 
    91  0194                     	;# 
    92  0195                     	;# 
    93  0196                     	;# 
    94  0197                     	;# 
    95  0199                     	;# 
    96  019A                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019C                     	;# 
   100  019D                     	;# 
   101  019E                     	;# 
   102  019F                     	;# 
   103  020C                     	;# 
   104  020D                     	;# 
   105  0211                     	;# 
   106  0211                     	;# 
   107  0212                     	;# 
   108  0212                     	;# 
   109  0213                     	;# 
   110  0213                     	;# 
   111  0214                     	;# 
   112  0214                     	;# 
   113  0215                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0216                     	;# 
   117  0216                     	;# 
   118  0217                     	;# 
   119  0217                     	;# 
   120  0391                     	;# 
   121  0392                     	;# 
   122  0393                     	;# 
   123  0394                     	;# 
   124  0395                     	;# 
   125  0396                     	;# 
   126  0498                     	;# 
   127  0498                     	;# 
   128  0499                     	;# 
   129  049A                     	;# 
   130  049B                     	;# 
   131  049B                     	;# 
   132  049C                     	;# 
   133  049D                     	;# 
   134  049E                     	;# 
   135  049F                     	;# 
   136  0611                     	;# 
   137  0612                     	;# 
   138  0613                     	;# 
   139  0613                     	;# 
   140  0614                     	;# 
   141  0615                     	;# 
   142  0616                     	;# 
   143  0616                     	;# 
   144  0617                     	;# 
   145  0618                     	;# 
   146  0619                     	;# 
   147  0619                     	;# 
   148  061A                     	;# 
   149  061B                     	;# 
   150  061C                     	;# 
   151  061C                     	;# 
   152  0691                     	;# 
   153  0692                     	;# 
   154  0693                     	;# 
   155  0694                     	;# 
   156  0695                     	;# 
   157  0F0F                     	;# 
   158  0F10                     	;# 
   159  0F11                     	;# 
   160  0F12                     	;# 
   161  0F13                     	;# 
   162  0F14                     	;# 
   163  0F15                     	;# 
   164  0F16                     	;# 
   165  0F17                     	;# 
   166  0F18                     	;# 
   167  0F19                     	;# 
   168  0F1A                     	;# 
   169  0F1B                     	;# 
   170  0F1C                     	;# 
   171  0F1D                     	;# 
   172  0F1E                     	;# 
   173  0F1F                     	;# 
   174  0F20                     	;# 
   175  0F21                     	;# 
   176  0F22                     	;# 
   177  0F23                     	;# 
   178  0F24                     	;# 
   179  0F25                     	;# 
   180  0F26                     	;# 
   181  0F27                     	;# 
   182  0F28                     	;# 
   183  0F29                     	;# 
   184  0F2A                     	;# 
   185  0F2B                     	;# 
   186  0F2C                     	;# 
   187  0F2D                     	;# 
   188  0F2E                     	;# 
   189  0F2F                     	;# 
   190  0F8C                     	;# 
   191  0F8D                     	;# 
   192  0F91                     	;# 
   193  0F95                     	;# 
   194  0F96                     	;# 
   195  0F97                     	;# 
   196  0F9C                     	;# 
   197  0F9D                     	;# 
   198  0F9E                     	;# 
   199  0FE3                     	;# 
   200  0FE4                     	;# 
   201  0FE5                     	;# 
   202  0FE6                     	;# 
   203  0FE7                     	;# 
   204  0FE8                     	;# 
   205  0FE9                     	;# 
   206  0FEA                     	;# 
   207  0FEB                     	;# 
   208  0FED                     	;# 
   209  0FEE                     	;# 
   210  0FEF                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  008E                     	;# 
   241  0091                     	;# 
   242  0092                     	;# 
   243  0093                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  010E                     	;# 
   258  0111                     	;# 
   259  0112                     	;# 
   260  0113                     	;# 
   261  0114                     	;# 
   262  0115                     	;# 
   263  0116                     	;# 
   264  0117                     	;# 
   265  0118                     	;# 
   266  0119                     	;# 
   267  011D                     	;# 
   268  018C                     	;# 
   269  018D                     	;# 
   270  018E                     	;# 
   271  0191                     	;# 
   272  0191                     	;# 
   273  0192                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0197                     	;# 
   280  0199                     	;# 
   281  019A                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019C                     	;# 
   285  019D                     	;# 
   286  019E                     	;# 
   287  019F                     	;# 
   288  020C                     	;# 
   289  020D                     	;# 
   290  0211                     	;# 
   291  0211                     	;# 
   292  0212                     	;# 
   293  0212                     	;# 
   294  0213                     	;# 
   295  0213                     	;# 
   296  0214                     	;# 
   297  0214                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0216                     	;# 
   302  0216                     	;# 
   303  0217                     	;# 
   304  0217                     	;# 
   305  0391                     	;# 
   306  0392                     	;# 
   307  0393                     	;# 
   308  0394                     	;# 
   309  0395                     	;# 
   310  0396                     	;# 
   311  0498                     	;# 
   312  0498                     	;# 
   313  0499                     	;# 
   314  049A                     	;# 
   315  049B                     	;# 
   316  049B                     	;# 
   317  049C                     	;# 
   318  049D                     	;# 
   319  049E                     	;# 
   320  049F                     	;# 
   321  0611                     	;# 
   322  0612                     	;# 
   323  0613                     	;# 
   324  0613                     	;# 
   325  0614                     	;# 
   326  0615                     	;# 
   327  0616                     	;# 
   328  0616                     	;# 
   329  0617                     	;# 
   330  0618                     	;# 
   331  0619                     	;# 
   332  0619                     	;# 
   333  061A                     	;# 
   334  061B                     	;# 
   335  061C                     	;# 
   336  061C                     	;# 
   337  0691                     	;# 
   338  0692                     	;# 
   339  0693                     	;# 
   340  0694                     	;# 
   341  0695                     	;# 
   342  0F0F                     	;# 
   343  0F10                     	;# 
   344  0F11                     	;# 
   345  0F12                     	;# 
   346  0F13                     	;# 
   347  0F14                     	;# 
   348  0F15                     	;# 
   349  0F16                     	;# 
   350  0F17                     	;# 
   351  0F18                     	;# 
   352  0F19                     	;# 
   353  0F1A                     	;# 
   354  0F1B                     	;# 
   355  0F1C                     	;# 
   356  0F1D                     	;# 
   357  0F1E                     	;# 
   358  0F1F                     	;# 
   359  0F20                     	;# 
   360  0F21                     	;# 
   361  0F22                     	;# 
   362  0F23                     	;# 
   363  0F24                     	;# 
   364  0F25                     	;# 
   365  0F26                     	;# 
   366  0F27                     	;# 
   367  0F28                     	;# 
   368  0F29                     	;# 
   369  0F2A                     	;# 
   370  0F2B                     	;# 
   371  0F2C                     	;# 
   372  0F2D                     	;# 
   373  0F2E                     	;# 
   374  0F2F                     	;# 
   375  0F8C                     	;# 
   376  0F8D                     	;# 
   377  0F91                     	;# 
   378  0F95                     	;# 
   379  0F96                     	;# 
   380  0F97                     	;# 
   381  0F9C                     	;# 
   382  0F9D                     	;# 
   383  0F9E                     	;# 
   384  0FE3                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011D                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  018E                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0197                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  020D                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0391                     	;# 
   491  0392                     	;# 
   492  0393                     	;# 
   493  0394                     	;# 
   494  0395                     	;# 
   495  0396                     	;# 
   496  0498                     	;# 
   497  0498                     	;# 
   498  0499                     	;# 
   499  049A                     	;# 
   500  049B                     	;# 
   501  049B                     	;# 
   502  049C                     	;# 
   503  049D                     	;# 
   504  049E                     	;# 
   505  049F                     	;# 
   506  0611                     	;# 
   507  0612                     	;# 
   508  0613                     	;# 
   509  0613                     	;# 
   510  0614                     	;# 
   511  0615                     	;# 
   512  0616                     	;# 
   513  0616                     	;# 
   514  0617                     	;# 
   515  0618                     	;# 
   516  0619                     	;# 
   517  0619                     	;# 
   518  061A                     	;# 
   519  061B                     	;# 
   520  061C                     	;# 
   521  061C                     	;# 
   522  0691                     	;# 
   523  0692                     	;# 
   524  0693                     	;# 
   525  0694                     	;# 
   526  0695                     	;# 
   527  0F0F                     	;# 
   528  0F10                     	;# 
   529  0F11                     	;# 
   530  0F12                     	;# 
   531  0F13                     	;# 
   532  0F14                     	;# 
   533  0F15                     	;# 
   534  0F16                     	;# 
   535  0F17                     	;# 
   536  0F18                     	;# 
   537  0F19                     	;# 
   538  0F1A                     	;# 
   539  0F1B                     	;# 
   540  0F1C                     	;# 
   541  0F1D                     	;# 
   542  0F1E                     	;# 
   543  0F1F                     	;# 
   544  0F20                     	;# 
   545  0F21                     	;# 
   546  0F22                     	;# 
   547  0F23                     	;# 
   548  0F24                     	;# 
   549  0F25                     	;# 
   550  0F26                     	;# 
   551  0F27                     	;# 
   552  0F28                     	;# 
   553  0F29                     	;# 
   554  0F2A                     	;# 
   555  0F2B                     	;# 
   556  0F2C                     	;# 
   557  0F2D                     	;# 
   558  0F2E                     	;# 
   559  0F2F                     	;# 
   560  0F8C                     	;# 
   561  0F8D                     	;# 
   562  0F91                     	;# 
   563  0F95                     	;# 
   564  0F96                     	;# 
   565  0F97                     	;# 
   566  0F9C                     	;# 
   567  0F9D                     	;# 
   568  0F9E                     	;# 
   569  0FE3                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000D                     	;# 
   595  000E                     	;# 
   596  0011                     	;# 
   597  0012                     	;# 
   598  0013                     	;# 
   599  0015                     	;# 
   600  0016                     	;# 
   601  0016                     	;# 
   602  0017                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  001B                     	;# 
   607  001C                     	;# 
   608  008C                     	;# 
   609  008D                     	;# 
   610  008E                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  009F                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  0111                     	;# 
   629  0112                     	;# 
   630  0113                     	;# 
   631  0114                     	;# 
   632  0115                     	;# 
   633  0116                     	;# 
   634  0117                     	;# 
   635  0118                     	;# 
   636  0119                     	;# 
   637  011D                     	;# 
   638  018C                     	;# 
   639  018D                     	;# 
   640  018E                     	;# 
   641  0191                     	;# 
   642  0191                     	;# 
   643  0192                     	;# 
   644  0193                     	;# 
   645  0193                     	;# 
   646  0194                     	;# 
   647  0195                     	;# 
   648  0196                     	;# 
   649  0197                     	;# 
   650  0199                     	;# 
   651  019A                     	;# 
   652  019B                     	;# 
   653  019B                     	;# 
   654  019C                     	;# 
   655  019D                     	;# 
   656  019E                     	;# 
   657  019F                     	;# 
   658  020C                     	;# 
   659  020D                     	;# 
   660  0211                     	;# 
   661  0211                     	;# 
   662  0212                     	;# 
   663  0212                     	;# 
   664  0213                     	;# 
   665  0213                     	;# 
   666  0214                     	;# 
   667  0214                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0216                     	;# 
   672  0216                     	;# 
   673  0217                     	;# 
   674  0217                     	;# 
   675  0391                     	;# 
   676  0392                     	;# 
   677  0393                     	;# 
   678  0394                     	;# 
   679  0395                     	;# 
   680  0396                     	;# 
   681  0498                     	;# 
   682  0498                     	;# 
   683  0499                     	;# 
   684  049A                     	;# 
   685  049B                     	;# 
   686  049B                     	;# 
   687  049C                     	;# 
   688  049D                     	;# 
   689  049E                     	;# 
   690  049F                     	;# 
   691  0611                     	;# 
   692  0612                     	;# 
   693  0613                     	;# 
   694  0613                     	;# 
   695  0614                     	;# 
   696  0615                     	;# 
   697  0616                     	;# 
   698  0616                     	;# 
   699  0617                     	;# 
   700  0618                     	;# 
   701  0619                     	;# 
   702  0619                     	;# 
   703  061A                     	;# 
   704  061B                     	;# 
   705  061C                     	;# 
   706  061C                     	;# 
   707  0691                     	;# 
   708  0692                     	;# 
   709  0693                     	;# 
   710  0694                     	;# 
   711  0695                     	;# 
   712  0F0F                     	;# 
   713  0F10                     	;# 
   714  0F11                     	;# 
   715  0F12                     	;# 
   716  0F13                     	;# 
   717  0F14                     	;# 
   718  0F15                     	;# 
   719  0F16                     	;# 
   720  0F17                     	;# 
   721  0F18                     	;# 
   722  0F19                     	;# 
   723  0F1A                     	;# 
   724  0F1B                     	;# 
   725  0F1C                     	;# 
   726  0F1D                     	;# 
   727  0F1E                     	;# 
   728  0F1F                     	;# 
   729  0F20                     	;# 
   730  0F21                     	;# 
   731  0F22                     	;# 
   732  0F23                     	;# 
   733  0F24                     	;# 
   734  0F25                     	;# 
   735  0F26                     	;# 
   736  0F27                     	;# 
   737  0F28                     	;# 
   738  0F29                     	;# 
   739  0F2A                     	;# 
   740  0F2B                     	;# 
   741  0F2C                     	;# 
   742  0F2D                     	;# 
   743  0F2E                     	;# 
   744  0F2F                     	;# 
   745  0F8C                     	;# 
   746  0F8D                     	;# 
   747  0F91                     	;# 
   748  0F95                     	;# 
   749  0F96                     	;# 
   750  0F97                     	;# 
   751  0F9C                     	;# 
   752  0F9D                     	;# 
   753  0F9E                     	;# 
   754  0FE3                     	;# 
   755  0FE4                     	;# 
   756  0FE5                     	;# 
   757  0FE6                     	;# 
   758  0FE7                     	;# 
   759  0FE8                     	;# 
   760  0FE9                     	;# 
   761  0FEA                     	;# 
   762  0FEB                     	;# 
   763  0FED                     	;# 
   764  0FEE                     	;# 
   765  0FEF                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0008                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000D                     	;# 
   780  000E                     	;# 
   781  0011                     	;# 
   782  0012                     	;# 
   783  0013                     	;# 
   784  0015                     	;# 
   785  0016                     	;# 
   786  0016                     	;# 
   787  0017                     	;# 
   788  0018                     	;# 
   789  0019                     	;# 
   790  001A                     	;# 
   791  001B                     	;# 
   792  001C                     	;# 
   793  008C                     	;# 
   794  008D                     	;# 
   795  008E                     	;# 
   796  0091                     	;# 
   797  0092                     	;# 
   798  0093                     	;# 
   799  0095                     	;# 
   800  0096                     	;# 
   801  0097                     	;# 
   802  0099                     	;# 
   803  009A                     	;# 
   804  009B                     	;# 
   805  009B                     	;# 
   806  009C                     	;# 
   807  009D                     	;# 
   808  009E                     	;# 
   809  009F                     	;# 
   810  010C                     	;# 
   811  010D                     	;# 
   812  010E                     	;# 
   813  0111                     	;# 
   814  0112                     	;# 
   815  0113                     	;# 
   816  0114                     	;# 
   817  0115                     	;# 
   818  0116                     	;# 
   819  0117                     	;# 
   820  0118                     	;# 
   821  0119                     	;# 
   822  011D                     	;# 
   823  018C                     	;# 
   824  018D                     	;# 
   825  018E                     	;# 
   826  0191                     	;# 
   827  0191                     	;# 
   828  0192                     	;# 
   829  0193                     	;# 
   830  0193                     	;# 
   831  0194                     	;# 
   832  0195                     	;# 
   833  0196                     	;# 
   834  0197                     	;# 
   835  0199                     	;# 
   836  019A                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019C                     	;# 
   840  019D                     	;# 
   841  019E                     	;# 
   842  019F                     	;# 
   843  020C                     	;# 
   844  020D                     	;# 
   845  0211                     	;# 
   846  0211                     	;# 
   847  0212                     	;# 
   848  0212                     	;# 
   849  0213                     	;# 
   850  0213                     	;# 
   851  0214                     	;# 
   852  0214                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0216                     	;# 
   857  0216                     	;# 
   858  0217                     	;# 
   859  0217                     	;# 
   860  0391                     	;# 
   861  0392                     	;# 
   862  0393                     	;# 
   863  0394                     	;# 
   864  0395                     	;# 
   865  0396                     	;# 
   866  0498                     	;# 
   867  0498                     	;# 
   868  0499                     	;# 
   869  049A                     	;# 
   870  049B                     	;# 
   871  049B                     	;# 
   872  049C                     	;# 
   873  049D                     	;# 
   874  049E                     	;# 
   875  049F                     	;# 
   876  0611                     	;# 
   877  0612                     	;# 
   878  0613                     	;# 
   879  0613                     	;# 
   880  0614                     	;# 
   881  0615                     	;# 
   882  0616                     	;# 
   883  0616                     	;# 
   884  0617                     	;# 
   885  0618                     	;# 
   886  0619                     	;# 
   887  0619                     	;# 
   888  061A                     	;# 
   889  061B                     	;# 
   890  061C                     	;# 
   891  061C                     	;# 
   892  0691                     	;# 
   893  0692                     	;# 
   894  0693                     	;# 
   895  0694                     	;# 
   896  0695                     	;# 
   897  0F0F                     	;# 
   898  0F10                     	;# 
   899  0F11                     	;# 
   900  0F12                     	;# 
   901  0F13                     	;# 
   902  0F14                     	;# 
   903  0F15                     	;# 
   904  0F16                     	;# 
   905  0F17                     	;# 
   906  0F18                     	;# 
   907  0F19                     	;# 
   908  0F1A                     	;# 
   909  0F1B                     	;# 
   910  0F1C                     	;# 
   911  0F1D                     	;# 
   912  0F1E                     	;# 
   913  0F1F                     	;# 
   914  0F20                     	;# 
   915  0F21                     	;# 
   916  0F22                     	;# 
   917  0F23                     	;# 
   918  0F24                     	;# 
   919  0F25                     	;# 
   920  0F26                     	;# 
   921  0F27                     	;# 
   922  0F28                     	;# 
   923  0F29                     	;# 
   924  0F2A                     	;# 
   925  0F2B                     	;# 
   926  0F2C                     	;# 
   927  0F2D                     	;# 
   928  0F2E                     	;# 
   929  0F2F                     	;# 
   930  0F8C                     	;# 
   931  0F8D                     	;# 
   932  0F91                     	;# 
   933  0F95                     	;# 
   934  0F96                     	;# 
   935  0F97                     	;# 
   936  0F9C                     	;# 
   937  0F9D                     	;# 
   938  0F9E                     	;# 
   939  0FE3                     	;# 
   940  0FE4                     	;# 
   941  0FE5                     	;# 
   942  0FE6                     	;# 
   943  0FE7                     	;# 
   944  0FE8                     	;# 
   945  0FE9                     	;# 
   946  0FEA                     	;# 
   947  0FEB                     	;# 
   948  0FED                     	;# 
   949  0FEE                     	;# 
   950  0FEF                     	;# 
   951  0000                     	;# 
   952  0001                     	;# 
   953  0002                     	;# 
   954  0003                     	;# 
   955  0004                     	;# 
   956  0005                     	;# 
   957  0006                     	;# 
   958  0007                     	;# 
   959  0008                     	;# 
   960  0009                     	;# 
   961  000A                     	;# 
   962  000B                     	;# 
   963  000C                     	;# 
   964  000D                     	;# 
   965  000E                     	;# 
   966  0011                     	;# 
   967  0012                     	;# 
   968  0013                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0016                     	;# 
   972  0017                     	;# 
   973  0018                     	;# 
   974  0019                     	;# 
   975  001A                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  008C                     	;# 
   979  008D                     	;# 
   980  008E                     	;# 
   981  0091                     	;# 
   982  0092                     	;# 
   983  0093                     	;# 
   984  0095                     	;# 
   985  0096                     	;# 
   986  0097                     	;# 
   987  0099                     	;# 
   988  009A                     	;# 
   989  009B                     	;# 
   990  009B                     	;# 
   991  009C                     	;# 
   992  009D                     	;# 
   993  009E                     	;# 
   994  009F                     	;# 
   995  010C                     	;# 
   996  010D                     	;# 
   997  010E                     	;# 
   998  0111                     	;# 
   999  0112                     	;# 
  1000  0113                     	;# 
  1001  0114                     	;# 
  1002  0115                     	;# 
  1003  0116                     	;# 
  1004  0117                     	;# 
  1005  0118                     	;# 
  1006  0119                     	;# 
  1007  011D                     	;# 
  1008  018C                     	;# 
  1009  018D                     	;# 
  1010  018E                     	;# 
  1011  0191                     	;# 
  1012  0191                     	;# 
  1013  0192                     	;# 
  1014  0193                     	;# 
  1015  0193                     	;# 
  1016  0194                     	;# 
  1017  0195                     	;# 
  1018  0196                     	;# 
  1019  0197                     	;# 
  1020  0199                     	;# 
  1021  019A                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019C                     	;# 
  1025  019D                     	;# 
  1026  019E                     	;# 
  1027  019F                     	;# 
  1028  020C                     	;# 
  1029  020D                     	;# 
  1030  0211                     	;# 
  1031  0211                     	;# 
  1032  0212                     	;# 
  1033  0212                     	;# 
  1034  0213                     	;# 
  1035  0213                     	;# 
  1036  0214                     	;# 
  1037  0214                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0215                     	;# 
  1041  0216                     	;# 
  1042  0216                     	;# 
  1043  0217                     	;# 
  1044  0217                     	;# 
  1045  0391                     	;# 
  1046  0392                     	;# 
  1047  0393                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  0498                     	;# 
  1052  0498                     	;# 
  1053  0499                     	;# 
  1054  049A                     	;# 
  1055  049B                     	;# 
  1056  049B                     	;# 
  1057  049C                     	;# 
  1058  049D                     	;# 
  1059  049E                     	;# 
  1060  049F                     	;# 
  1061  0611                     	;# 
  1062  0612                     	;# 
  1063  0613                     	;# 
  1064  0613                     	;# 
  1065  0614                     	;# 
  1066  0615                     	;# 
  1067  0616                     	;# 
  1068  0616                     	;# 
  1069  0617                     	;# 
  1070  0618                     	;# 
  1071  0619                     	;# 
  1072  0619                     	;# 
  1073  061A                     	;# 
  1074  061B                     	;# 
  1075  061C                     	;# 
  1076  061C                     	;# 
  1077  0691                     	;# 
  1078  0692                     	;# 
  1079  0693                     	;# 
  1080  0694                     	;# 
  1081  0695                     	;# 
  1082  0F0F                     	;# 
  1083  0F10                     	;# 
  1084  0F11                     	;# 
  1085  0F12                     	;# 
  1086  0F13                     	;# 
  1087  0F14                     	;# 
  1088  0F15                     	;# 
  1089  0F16                     	;# 
  1090  0F17                     	;# 
  1091  0F18                     	;# 
  1092  0F19                     	;# 
  1093  0F1A                     	;# 
  1094  0F1B                     	;# 
  1095  0F1C                     	;# 
  1096  0F1D                     	;# 
  1097  0F1E                     	;# 
  1098  0F1F                     	;# 
  1099  0F20                     	;# 
  1100  0F21                     	;# 
  1101  0F22                     	;# 
  1102  0F23                     	;# 
  1103  0F24                     	;# 
  1104  0F25                     	;# 
  1105  0F26                     	;# 
  1106  0F27                     	;# 
  1107  0F28                     	;# 
  1108  0F29                     	;# 
  1109  0F2A                     	;# 
  1110  0F2B                     	;# 
  1111  0F2C                     	;# 
  1112  0F2D                     	;# 
  1113  0F2E                     	;# 
  1114  0F2F                     	;# 
  1115  0F8C                     	;# 
  1116  0F8D                     	;# 
  1117  0F91                     	;# 
  1118  0F95                     	;# 
  1119  0F96                     	;# 
  1120  0F97                     	;# 
  1121  0F9C                     	;# 
  1122  0F9D                     	;# 
  1123  0F9E                     	;# 
  1124  0FE3                     	;# 
  1125  0FE4                     	;# 
  1126  0FE5                     	;# 
  1127  0FE6                     	;# 
  1128  0FE7                     	;# 
  1129  0FE8                     	;# 
  1130  0FE9                     	;# 
  1131  0FEA                     	;# 
  1132  0FEB                     	;# 
  1133  0FED                     	;# 
  1134  0FEE                     	;# 
  1135  0FEF                     	;# 
  1136                           
  1137                           	psect	nvBANK0
  1138  0036                     __pnvBANK0:	
  1139  0036                     _eusartTxBufferRemaining:	
  1140  0036                     	ds	1
  1141  0037                     _timer0ReloadVal:	
  1142  0037                     	ds	1
  1143  000B                     _INTCONbits	set	11
  1144  0011                     _PIR1bits	set	17
  1145  0015                     _TMR0	set	21
  1146  0070                     _RC0	set	112
  1147  0071                     _RC1	set	113
  1148  0072                     _RC2	set	114
  1149  0073                     _RC3	set	115
  1150  0095                     _OPTION_REG	set	149
  1151  0095                     _OPTION_REGbits	set	149
  1152  0099                     _OSCCON	set	153
  1153  009A                     _OSCSTAT	set	154
  1154  0091                     _PIE1bits	set	145
  1155  008C                     _TRISA	set	140
  1156  008D                     _TRISB	set	141
  1157  008E                     _TRISC	set	142
  1158  011D                     _APFCON	set	285
  1159  010C                     _LATA	set	268
  1160  010D                     _LATB	set	269
  1161  010E                     _LATC	set	270
  1162  018C                     _ANSELA	set	396
  1163  018D                     _ANSELB	set	397
  1164  018E                     _ANSELC	set	398
  1165  019F                     _BAUDCON	set	415
  1166  0199                     _RCREG	set	409
  1167  019D                     _RCSTA	set	413
  1168  019D                     _RCSTAbits	set	413
  1169  019C                     _SPBRGH	set	412
  1170  019B                     _SPBRGL	set	411
  1171  019A                     _TXREG	set	410
  1172  019E                     _TXSTA	set	414
  1173  020C                     _WPUA	set	524
  1174  020D                     _WPUB	set	525
  1175                           
  1176                           	psect	stringtext
  1177  0156                     __pstringtext:	
  1178  0156                     STR_1:	
  1179  0156  3474               	retlw	116	;'t'
  1180  0157  3465               	retlw	101	;'e'
  1181  0158  3473               	retlw	115	;'s'
  1182  0159  3474               	retlw	116	;'t'
  1183  015A  3420               	retlw	32	;' '
  1184  015B  3400               	retlw	0
  1185                           
  1186                           ; #config settings
  1187  0000                     
  1188                           	psect	cinit
  1189  0029                     start_initialization:	
  1190  0029                     __initialization:	
  1191                           
  1192                           ; Clear objects allocated to COMMON
  1193  0029  01F7               	clrf	__pbssCOMMON& (0+127)
  1194  002A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1195  002B  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1196  002C  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1197  002D  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1198                           
  1199                           ; Clear objects allocated to BANK0
  1200  002E  3020               	movlw	low __pbssBANK0
  1201  002F  0084               	movwf	4
  1202  0030  3000               	movlw	high __pbssBANK0
  1203  0031  0085               	movwf	5
  1204  0032  3016               	movlw	22
  1205  0033  3181  215C         	fcall	clear_ram0
  1206  0035                     end_of_initialization:	
  1207                           ;End of C runtime variable initialization code
  1208                           
  1209  0035                     __end_of__initialization:	
  1210  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1211  0036  0020               	movlb	0
  1212  0037  3180  28F4         	ljmp	_main	;jump to C main() function
  1213                           
  1214                           	psect	bssCOMMON
  1215  0077                     __pbssCOMMON:	
  1216  0077                     _Heart_beat_flag:	
  1217  0077                     	ds	1
  1218  0078                     _Transmit_flag:	
  1219  0078                     	ds	1
  1220  0079                     _eusartRxHead:	
  1221  0079                     	ds	1
  1222  007A                     _eusartTxBufferWorkingFlag:	
  1223  007A                     	ds	1
  1224  007B                     _eusartTxTail:	
  1225  007B                     	ds	1
  1226                           
  1227                           	psect	bssBANK0
  1228  0020                     __pbssBANK0:	
  1229  0020                     _eusartTxBuffer:	
  1230  0020                     	ds	9
  1231  0029                     _eusartRxBuffer:	
  1232  0029                     	ds	8
  1233  0031                     TMR0_ISR@CountCallBack:	
  1234  0031                     	ds	2
  1235  0033                     TMR0_CallBack@timer_count:	
  1236  0033                     	ds	1
  1237  0034                     _eusartRxCount:	
  1238  0034                     	ds	1
  1239  0035                     _eusartRxTail:	
  1240  0035                     	ds	1
  1241                           
  1242                           	psect	clrtext
  1243  015C                     clear_ram0:	
  1244                           ;	Called with FSR0 containing the base address, and
  1245                           ;	WREG with the size to clear
  1246                           
  1247  015C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1248  015D                     clrloop0:	
  1249  015D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1250  015E  3101               	addfsr 0,1
  1251  015F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1252  0160  295D               	goto	clrloop0	;have we reached the end yet?
  1253  0161  3400               	retlw	0	;all done for this memory range, return
  1254                           
  1255                           	psect	cstackCOMMON
  1256  0070                     __pcstackCOMMON:	
  1257  0070                     ?_OSCILLATOR_Initialize:	
  1258  0070                     ?_EUSART_Initilize:	
  1259                           ; 0 bytes @ 0x0
  1260                           
  1261  0070                     ?_TMR0_Initialize:	
  1262                           ; 0 bytes @ 0x0
  1263                           
  1264  0070                     ?_sendUart:	
  1265                           ; 0 bytes @ 0x0
  1266                           
  1267  0070                     ?_TMR0_CallBack:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0070                     ??_TMR0_CallBack:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273  0070                     ?_PIN_MANAGER_Initialize:	
  1274                           ; 0 bytes @ 0x0
  1275                           
  1276  0070                     ?_SYSTEM_Initialize:	
  1277                           ; 0 bytes @ 0x0
  1278                           
  1279  0070                     ?_main:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0070                     ?_EUSART_Transmit_ISR:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0070                     ??_EUSART_Transmit_ISR:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0070                     ?_EUSART_Receive_ISR:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0070                     ??_EUSART_Receive_ISR:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0070                     ?_TMR0_ISR:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0070                     ?_INTERRUPT_InterruptManager:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300                           
  1301                           ; 0 bytes @ 0x0
  1302  0070                     	ds	1
  1303  0071                     ??_TMR0_ISR:	
  1304  0071                     ??_INTERRUPT_InterruptManager:	
  1305                           ; 0 bytes @ 0x1
  1306                           
  1307                           
  1308                           ; 0 bytes @ 0x1
  1309  0071                     	ds	1
  1310  0072                     ??_OSCILLATOR_Initialize:	
  1311  0072                     ??_EUSART_Initilize:	
  1312                           ; 0 bytes @ 0x2
  1313                           
  1314  0072                     ??_TMR0_Initialize:	
  1315                           ; 0 bytes @ 0x2
  1316                           
  1317  0072                     ?_EUSART_str_Write:	
  1318                           ; 0 bytes @ 0x2
  1319                           
  1320  0072                     ??_PIN_MANAGER_Initialize:	
  1321                           ; 0 bytes @ 0x2
  1322                           
  1323  0072                     EUSART_str_Write@txData:	
  1324                           ; 0 bytes @ 0x2
  1325                           
  1326                           
  1327                           ; 2 bytes @ 0x2
  1328  0072                     	ds	1
  1329  0073                     ??_SYSTEM_Initialize:	
  1330                           
  1331                           ; 0 bytes @ 0x3
  1332  0073                     	ds	1
  1333  0074                     ??_EUSART_str_Write:	
  1334                           
  1335                           ; 0 bytes @ 0x4
  1336  0074                     	ds	3
  1337  0077                     ??_sendUart:	
  1338  0077                     ??_main:	
  1339                           ; 0 bytes @ 0x7
  1340                           
  1341                           
  1342                           	psect	cstackBANK0
  1343  0038                     __pcstackBANK0:	
  1344                           ; 0 bytes @ 0x7
  1345                           
  1346  0038                     EUSART_str_Write@i:	
  1347                           
  1348                           ; 2 bytes @ 0x0
  1349  0038                     	ds	2
  1350                           
  1351                           	psect	maintext
  1352  00F4                     __pmaintext:	
  1353 ;;
  1354 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1355 ;;
  1356 ;; *************** function _main *****************
  1357 ;; Defined at:
  1358 ;;		line 58 in file "main.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;		None               void
  1365 ;; Registers used:
  1366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : B1F/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1372 ;;      Params:         0       0       0       0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels required when called:    5
  1378 ;; This function calls:
  1379 ;;		_SYSTEM_Initialize
  1380 ;;		_sendUart
  1381 ;; This function is called by:
  1382 ;;		Startup code after reset
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _main
  1388  00F4                     _main:	
  1389                           
  1390                           ;main.c: 61: SYSTEM_Initialize();
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1394  00F4  3181  213F  3180   	fcall	_SYSTEM_Initialize
  1395                           
  1396                           ;main.c: 67: (INTCONbits.GIE = 1);
  1397  00F7  178B               	bsf	11,7	;volatile
  1398                           
  1399                           ;main.c: 70: (INTCONbits.PEIE = 1);
  1400  00F8  170B               	bsf	11,6	;volatile
  1401                           
  1402                           ;main.c: 78: RC0=1;
  1403  00F9  0020               	movlb	0	; select bank0
  1404  00FA  140E               	bsf	14,0	;volatile
  1405                           
  1406                           ;main.c: 79: RC1=0;
  1407  00FB  108E               	bcf	14,1	;volatile
  1408                           
  1409                           ;main.c: 80: RC2=0;
  1410  00FC  110E               	bcf	14,2	;volatile
  1411                           
  1412                           ;main.c: 81: RC3=0;
  1413  00FD  118E               	bcf	14,3	;volatile
  1414  00FE                     l975:	
  1415                           ;main.c: 83: while (1) {
  1416                           
  1417                           
  1418                           ;main.c: 85: if(Heart_beat_flag){
  1419  00FE  0877               	movf	_Heart_beat_flag,w	;volatile
  1420  00FF  1903               	btfsc	3,2
  1421  0100  2905               	goto	l981
  1422                           
  1423                           ;main.c: 86: Heart_beat_flag = 0;
  1424  0101  01F7               	clrf	_Heart_beat_flag	;volatile
  1425                           
  1426                           ;main.c: 87: RC0 ^= 1;
  1427  0102  0020               	movlb	0	; select bank0
  1428  0103  3001               	movlw	1
  1429  0104  068E               	xorwf	14,f
  1430  0105                     l981:	
  1431                           
  1432                           ;main.c: 88: }
  1433                           ;main.c: 90: sendUart();
  1434  0105  3181  214B  3180   	fcall	_sendUart
  1435  0108  28FE               	goto	l975
  1436  0109                     __end_of_main:	
  1437                           
  1438                           	psect	text1
  1439  014B                     __ptext1:	
  1440 ;; *************** function _sendUart *****************
  1441 ;; Defined at:
  1442 ;;		line 94 in file "main.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;		None               void
  1449 ;; Registers used:
  1450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1456 ;;      Params:         0       0       0       0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    4
  1463 ;; This function calls:
  1464 ;;		_EUSART_str_Write
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           
  1471                           ;psect for function _sendUart
  1472  014B                     _sendUart:	
  1473                           
  1474                           ;main.c: 97: if(Transmit_flag){
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _sendUart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1478  014B  0878               	movf	_Transmit_flag,w	;volatile
  1479  014C  1903               	btfsc	3,2
  1480  014D  0008               	return
  1481                           
  1482                           ;main.c: 98: EUSART_str_Write((uint8_t *)"test ");
  1483  014E  3056               	movlw	low (STR_1| (0+32768))
  1484  014F  00F2               	movwf	EUSART_str_Write@txData
  1485  0150  3081               	movlw	high (STR_1| (0+32768))
  1486  0151  00F3               	movwf	EUSART_str_Write@txData+1
  1487  0152  3180  2039         	fcall	_EUSART_str_Write
  1488                           
  1489                           ;main.c: 99: Transmit_flag = 0;
  1490  0154  01F8               	clrf	_Transmit_flag	;volatile
  1491  0155  0008               	return
  1492  0156                     __end_of_sendUart:	
  1493                           
  1494                           	psect	text2
  1495  0039                     __ptext2:	
  1496 ;; *************** function _EUSART_str_Write *****************
  1497 ;; Defined at:
  1498 ;;		line 138 in file "mcc_generated_files/eusart.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  txData          2    2[COMMON] PTR unsigned char 
  1501 ;;		 -> STR_1(6), 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  i               2    0[BANK0 ] int 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;		None               void
  1506 ;; Registers used:
  1507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1513 ;;      Params:         2       0       0       0       0       0       0       0
  1514 ;;      Locals:         0       2       0       0       0       0       0       0
  1515 ;;      Temps:          3       0       0       0       0       0       0       0
  1516 ;;      Totals:         5       2       0       0       0       0       0       0
  1517 ;;Total ram usage:        7 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    3
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_sendUart
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _EUSART_str_Write
  1529  0039                     _EUSART_str_Write:	
  1530                           
  1531                           ;eusart.c: 140: int i=0;
  1532                           
  1533                           ;incstack = 0
  1534                           ; Regs used in _EUSART_str_Write: [wreg-fsr1h+status,2+status,0+pclath]
  1535  0039  0020               	movlb	0	; select bank0
  1536  003A  01B8               	clrf	EUSART_str_Write@i
  1537  003B  01B9               	clrf	EUSART_str_Write@i+1
  1538  003C                     l937:	
  1539                           ;eusart.c: 142: while (eusartTxBufferWorkingFlag) {
  1540                           
  1541  003C  087A               	movf	_eusartTxBufferWorkingFlag,w	;volatile
  1542  003D  1D03               	btfss	3,2
  1543  003E  283C               	goto	l937
  1544                           
  1545                           ;eusart.c: 143: }
  1546                           ;eusart.c: 145: PIE1bits.TXIE = 0;
  1547  003F  0021               	movlb	1	; select bank1
  1548  0040  1211               	bcf	17,4	;volatile
  1549  0041                     l939:	
  1550                           ;eusart.c: 146: while(1){
  1551                           
  1552                           
  1553                           ;eusart.c: 147: eusartTxBuffer[i] = txData[i];
  1554  0041  0872               	movf	EUSART_str_Write@txData,w
  1555  0042  0020               	movlb	0	; select bank0
  1556  0043  0738               	addwf	EUSART_str_Write@i,w
  1557  0044  0084               	movwf	4
  1558  0045  0873               	movf	EUSART_str_Write@txData+1,w
  1559  0046  3D39               	addwfc	EUSART_str_Write@i+1,w
  1560  0047  0085               	movwf	5
  1561  0048  0800               	movf	0,w	;code access
  1562  0049  00F4               	movwf	??_EUSART_str_Write
  1563  004A  0838               	movf	EUSART_str_Write@i,w
  1564  004B  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1565  004C  0086               	movwf	6
  1566  004D  0187               	clrf	7
  1567  004E  0874               	movf	??_EUSART_str_Write,w
  1568  004F  0081               	movwf	1
  1569                           
  1570                           ;eusart.c: 148: if(txData[i++]=='\0'){
  1571  0050  0839               	movf	EUSART_str_Write@i+1,w
  1572  0051  00F5               	movwf	??_EUSART_str_Write+1
  1573  0052  0838               	movf	EUSART_str_Write@i,w
  1574  0053  00F4               	movwf	??_EUSART_str_Write
  1575  0054  0AB8               	incf	EUSART_str_Write@i,f
  1576  0055  1903               	skipnz
  1577  0056  0AB9               	incf	EUSART_str_Write@i+1,f
  1578  0057  0872               	movf	EUSART_str_Write@txData,w
  1579  0058  0774               	addwf	??_EUSART_str_Write,w
  1580  0059  0084               	movwf	4
  1581  005A  0873               	movf	EUSART_str_Write@txData+1,w
  1582  005B  3D75               	addwfc	??_EUSART_str_Write+1,w
  1583  005C  0085               	movwf	5
  1584  005D  0012               	moviw fsr0++
  1585  005E  1903               	btfsc	3,2
  1586  005F  286A               	goto	l949
  1587                           
  1588                           ;eusart.c: 150: }
  1589                           ;eusart.c: 151: if(i>=8){
  1590                           
  1591                           ;eusart.c: 149: break;
  1592  0060  0839               	movf	EUSART_str_Write@i+1,w
  1593  0061  3A80               	xorlw	128
  1594  0062  00F4               	movwf	??_EUSART_str_Write
  1595  0063  3080               	movlw	128
  1596  0064  0274               	subwf	??_EUSART_str_Write,w
  1597  0065  3008               	movlw	8
  1598  0066  1903               	btfsc	3,2
  1599  0067  0238               	subwf	EUSART_str_Write@i,w
  1600  0068  1C03               	skipc
  1601  0069  2841               	goto	l939
  1602  006A                     l949:	
  1603                           ;eusart.c: 152: break;
  1604                           
  1605                           
  1606                           ;eusart.c: 153: }
  1607                           ;eusart.c: 154: }
  1608                           ;eusart.c: 156: eusartTxBufferWorkingFlag = 1;
  1609  006A  3001               	movlw	1
  1610  006B  00F4               	movwf	??_EUSART_str_Write
  1611  006C  0874               	movf	??_EUSART_str_Write,w
  1612  006D  00FA               	movwf	_eusartTxBufferWorkingFlag	;volatile
  1613                           
  1614                           ;eusart.c: 157: eusartTxTail = 0;
  1615  006E  01FB               	clrf	_eusartTxTail
  1616                           
  1617                           ;eusart.c: 159: PIE1bits.TXIE = 1;
  1618  006F  0021               	movlb	1	; select bank1
  1619  0070  1611               	bsf	17,4	;volatile
  1620  0071  0008               	return
  1621  0072                     __end_of_EUSART_str_Write:	
  1622                           
  1623                           	psect	text3
  1624  013F                     __ptext3:	
  1625 ;; *************** function _SYSTEM_Initialize *****************
  1626 ;; Defined at:
  1627 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;		None               void
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0, pclath, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1641 ;;      Params:         0       0       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    4
  1648 ;; This function calls:
  1649 ;;		_EUSART_Initilize
  1650 ;;		_OSCILLATOR_Initialize
  1651 ;;		_PIN_MANAGER_Initialize
  1652 ;;		_TMR0_Initialize
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _SYSTEM_Initialize
  1660  013F                     _SYSTEM_Initialize:	
  1661                           
  1662                           ;mcc.c: 70: OSCILLATOR_Initialize();
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1666  013F  3181  2162  3181   	fcall	_OSCILLATOR_Initialize
  1667                           
  1668                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  1669  0142  3180  209C  3181   	fcall	_PIN_MANAGER_Initialize
  1670                           
  1671                           ;mcc.c: 72: EUSART_Initilize();
  1672  0145  3180  20BE  3181   	fcall	_EUSART_Initilize
  1673                           
  1674                           ;mcc.c: 73: TMR0_Initialize();
  1675  0148  3181  2130         	fcall	_TMR0_Initialize
  1676  014A  0008               	return
  1677  014B                     __end_of_SYSTEM_Initialize:	
  1678                           
  1679                           	psect	text4
  1680  0130                     __ptext4:	
  1681 ;; *************** function _TMR0_Initialize *****************
  1682 ;; Defined at:
  1683 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;		None               void
  1690 ;; Registers used:
  1691 ;;		wreg, status,2
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1697 ;;      Params:         0       0       0       0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0
  1699 ;;      Temps:          1       0       0       0       0       0       0       0
  1700 ;;      Totals:         1       0       0       0       0       0       0       0
  1701 ;;Total ram usage:        1 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    3
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_SYSTEM_Initialize
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _TMR0_Initialize
  1713  0130                     _TMR0_Initialize:	
  1714                           
  1715                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1719  0130  0021               	movlb	1	; select bank1
  1720  0131  0815               	movf	21,w	;volatile
  1721  0132  39C0               	andlw	192
  1722  0133  3817               	iorlw	23
  1723  0134  0095               	movwf	21	;volatile
  1724                           
  1725                           ;tmr0.c: 73: TMR0 = 0x64;
  1726  0135  3064               	movlw	100
  1727  0136  0020               	movlb	0	; select bank0
  1728  0137  0095               	movwf	21	;volatile
  1729                           
  1730                           ;tmr0.c: 76: timer0ReloadVal = 100;
  1731  0138  3064               	movlw	100
  1732  0139  00F2               	movwf	??_TMR0_Initialize
  1733  013A  0872               	movf	??_TMR0_Initialize,w
  1734  013B  00B7               	movwf	_timer0ReloadVal	;volatile
  1735                           
  1736                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  1737  013C  110B               	bcf	11,2	;volatile
  1738                           
  1739                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  1740  013D  168B               	bsf	11,5	;volatile
  1741  013E  0008               	return
  1742  013F                     __end_of_TMR0_Initialize:	
  1743                           
  1744                           	psect	text5
  1745  009C                     __ptext5:	
  1746 ;; *************** function _PIN_MANAGER_Initialize *****************
  1747 ;; Defined at:
  1748 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;		None               void
  1755 ;; Registers used:
  1756 ;;		wreg, status,2
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1762 ;;      Params:         0       0       0       0       0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0
  1765 ;;      Totals:         0       0       0       0       0       0       0       0
  1766 ;;Total ram usage:        0 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    3
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_SYSTEM_Initialize
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _PIN_MANAGER_Initialize
  1778  009C                     _PIN_MANAGER_Initialize:	
  1779                           
  1780                           ;pin_manager.c: 51: LATA = 0x00;
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1784  009C  0022               	movlb	2	; select bank2
  1785  009D  018C               	clrf	12	;volatile
  1786                           
  1787                           ;pin_manager.c: 52: TRISA = 0x3F;
  1788  009E  303F               	movlw	63
  1789  009F  0021               	movlb	1	; select bank1
  1790  00A0  008C               	movwf	12	;volatile
  1791                           
  1792                           ;pin_manager.c: 53: ANSELA = 0x17;
  1793  00A1  3017               	movlw	23
  1794  00A2  0023               	movlb	3	; select bank3
  1795  00A3  008C               	movwf	12	;volatile
  1796                           
  1797                           ;pin_manager.c: 54: WPUA = 0x00;
  1798  00A4  0024               	movlb	4	; select bank4
  1799  00A5  018C               	clrf	12	;volatile
  1800                           
  1801                           ;pin_manager.c: 56: LATB = 0x00;
  1802  00A6  0022               	movlb	2	; select bank2
  1803  00A7  018D               	clrf	13	;volatile
  1804                           
  1805                           ;pin_manager.c: 57: TRISB = 0xF0;
  1806  00A8  30F0               	movlw	240
  1807  00A9  0021               	movlb	1	; select bank1
  1808  00AA  008D               	movwf	13	;volatile
  1809                           
  1810                           ;pin_manager.c: 58: ANSELB = 0x10;
  1811  00AB  3010               	movlw	16
  1812  00AC  0023               	movlb	3	; select bank3
  1813  00AD  008D               	movwf	13	;volatile
  1814                           
  1815                           ;pin_manager.c: 59: WPUB = 0x00;
  1816  00AE  0024               	movlb	4	; select bank4
  1817  00AF  018D               	clrf	13	;volatile
  1818                           
  1819                           ;pin_manager.c: 61: LATC = 0x05;
  1820  00B0  3005               	movlw	5
  1821  00B1  0022               	movlb	2	; select bank2
  1822  00B2  008E               	movwf	14	;volatile
  1823                           
  1824                           ;pin_manager.c: 62: TRISC = 0xF0;
  1825  00B3  30F0               	movlw	240
  1826  00B4  0021               	movlb	1	; select bank1
  1827  00B5  008E               	movwf	14	;volatile
  1828                           
  1829                           ;pin_manager.c: 63: ANSELC = 0xC0;
  1830  00B6  30C0               	movlw	192
  1831  00B7  0023               	movlb	3	; select bank3
  1832  00B8  008E               	movwf	14	;volatile
  1833                           
  1834                           ;pin_manager.c: 65: OPTION_REGbits.nWPUEN = 0x01;
  1835  00B9  0021               	movlb	1	; select bank1
  1836  00BA  1795               	bsf	21,7	;volatile
  1837                           
  1838                           ;pin_manager.c: 67: APFCON = 0x00;
  1839  00BB  0022               	movlb	2	; select bank2
  1840  00BC  019D               	clrf	29	;volatile
  1841  00BD  0008               	return
  1842  00BE                     __end_of_PIN_MANAGER_Initialize:	
  1843                           
  1844                           	psect	text6
  1845  0162                     __ptext6:	
  1846 ;; *************** function _OSCILLATOR_Initialize *****************
  1847 ;; Defined at:
  1848 ;;		line 76 in file "mcc_generated_files/mcc.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;		None               void
  1855 ;; Registers used:
  1856 ;;		wreg, status,2
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1862 ;;      Params:         0       0       0       0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0
  1865 ;;      Totals:         0       0       0       0       0       0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    3
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_SYSTEM_Initialize
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _OSCILLATOR_Initialize
  1878  0162                     _OSCILLATOR_Initialize:	
  1879                           
  1880                           ;mcc.c: 78: OSCCON = 0x7A;
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1884  0162  307A               	movlw	122
  1885  0163  0021               	movlb	1	; select bank1
  1886  0164  0099               	movwf	25	;volatile
  1887                           
  1888                           ;mcc.c: 80: OSCSTAT = 0x00;
  1889  0165  019A               	clrf	26	;volatile
  1890  0166  0008               	return
  1891  0167                     __end_of_OSCILLATOR_Initialize:	
  1892                           
  1893                           	psect	text7
  1894  00BE                     __ptext7:	
  1895 ;; *************** function _EUSART_Initilize *****************
  1896 ;; Defined at:
  1897 ;;		line 77 in file "mcc_generated_files/eusart.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg, status,2
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1911 ;;      Params:         0       0       0       0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0       0
  1913 ;;      Temps:          1       0       0       0       0       0       0       0
  1914 ;;      Totals:         1       0       0       0       0       0       0       0
  1915 ;;Total ram usage:        1 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    3
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_SYSTEM_Initialize
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _EUSART_Initilize
  1927  00BE                     _EUSART_Initilize:	
  1928                           
  1929                           ;eusart.c: 79: PIE1bits.RCIE = 0;
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in _EUSART_Initilize: [wreg+status,2]
  1933  00BE  0021               	movlb	1	; select bank1
  1934  00BF  1291               	bcf	17,5	;volatile
  1935                           
  1936                           ;eusart.c: 80: PIE1bits.TXIE = 0;
  1937  00C0  1211               	bcf	17,4	;volatile
  1938                           
  1939                           ;eusart.c: 85: BAUDCON = 0x48;
  1940  00C1  3048               	movlw	72
  1941  00C2  0023               	movlb	3	; select bank3
  1942  00C3  009F               	movwf	31	;volatile
  1943                           
  1944                           ;eusart.c: 88: RCSTA = 0x80;
  1945  00C4  3080               	movlw	128
  1946  00C5  009D               	movwf	29	;volatile
  1947                           
  1948                           ;eusart.c: 91: TXSTA = 0x26;
  1949  00C6  3026               	movlw	38
  1950  00C7  009E               	movwf	30	;volatile
  1951                           
  1952                           ;eusart.c: 94: SPBRGL = 0xA0;
  1953  00C8  30A0               	movlw	160
  1954  00C9  009B               	movwf	27	;volatile
  1955                           
  1956                           ;eusart.c: 97: SPBRGH = 0x01;
  1957  00CA  3001               	movlw	1
  1958  00CB  009C               	movwf	28	;volatile
  1959                           
  1960                           ;eusart.c: 102: eusartTxTail = 0;
  1961  00CC  01FB               	clrf	_eusartTxTail
  1962                           
  1963                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof (eusartTxBuffer);
  1964  00CD  3009               	movlw	9
  1965  00CE  00F2               	movwf	??_EUSART_Initilize
  1966  00CF  0872               	movf	??_EUSART_Initilize,w
  1967  00D0  0020               	movlb	0	; select bank0
  1968  00D1  00B6               	movwf	_eusartTxBufferRemaining	;volatile
  1969                           
  1970                           ;eusart.c: 105: eusartRxHead = 0;
  1971  00D2  01F9               	clrf	_eusartRxHead
  1972                           
  1973                           ;eusart.c: 106: eusartRxTail = 0;
  1974  00D3  01B5               	clrf	_eusartRxTail
  1975                           
  1976                           ;eusart.c: 107: eusartRxCount = 0;
  1977  00D4  01B4               	clrf	_eusartRxCount	;volatile
  1978                           
  1979                           ;eusart.c: 109: eusartTxBuffer[8] = '\0';
  1980  00D5  01A8               	clrf	_eusartTxBuffer+8
  1981                           
  1982                           ;eusart.c: 112: PIE1bits.RCIE = 1;
  1983  00D6  0021               	movlb	1	; select bank1
  1984  00D7  1691               	bsf	17,5	;volatile
  1985  00D8  0008               	return
  1986  00D9                     __end_of_EUSART_Initilize:	
  1987                           
  1988                           	psect	intentry
  1989  0004                     __pintentry:	
  1990 ;; *************** function _INTERRUPT_InterruptManager *****************
  1991 ;; Defined at:
  1992 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;		None               void
  1999 ;; Registers used:
  2000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2006 ;;      Params:         0       0       0       0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0
  2008 ;;      Temps:          1       0       0       0       0       0       0       0
  2009 ;;      Totals:         1       0       0       0       0       0       0       0
  2010 ;;Total ram usage:        1 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    2
  2013 ;; This function calls:
  2014 ;;		_EUSART_Receive_ISR
  2015 ;;		_EUSART_Transmit_ISR
  2016 ;;		_TMR0_ISR
  2017 ;; This function is called by:
  2018 ;;		Interrupt level 1
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022  0004                     _INTERRUPT_InterruptManager:	
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2026  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2027  0005  3180               	pagesel	$
  2028  0006  0020               	movlb	0	; select bank0
  2029  0007  087F               	movf	127,w
  2030  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2031                           
  2032                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  2033  0009  1A8B               	btfsc	11,5	;volatile
  2034  000A  1D0B               	btfss	11,2	;volatile
  2035  000B  2810               	goto	i1l205
  2036                           
  2037                           ;interrupt_manager.c: 55: TMR0_ISR();
  2038  000C  3181  2109  3180   	fcall	_TMR0_ISR
  2039                           
  2040                           ;interrupt_manager.c: 56: } else if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1) {
  2041  000F  2822               	goto	i1l211
  2042  0010                     i1l205:	
  2043  0010  0021               	movlb	1	; select bank1
  2044  0011  1E91               	btfss	17,5	;volatile
  2045  0012  281A               	goto	i1l207
  2046  0013  0020               	movlb	0	; select bank0
  2047  0014  1E91               	btfss	17,5	;volatile
  2048  0015  281A               	goto	i1l207
  2049                           
  2050                           ;interrupt_manager.c: 57: EUSART_Receive_ISR();
  2051  0016  3180  20D9  3180   	fcall	_EUSART_Receive_ISR
  2052                           
  2053                           ;interrupt_manager.c: 58: } else if (PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1) {
  2054  0019  2822               	goto	i1l211
  2055  001A                     i1l207:	
  2056  001A  0021               	movlb	1	; select bank1
  2057  001B  1E11               	btfss	17,4	;volatile
  2058  001C  2822               	goto	i1l211
  2059  001D  0020               	movlb	0	; select bank0
  2060  001E  1E11               	btfss	17,4	;volatile
  2061  001F  2822               	goto	i1l211
  2062                           
  2063                           ;interrupt_manager.c: 59: EUSART_Transmit_ISR();
  2064  0020  3180  2072         	fcall	_EUSART_Transmit_ISR
  2065  0022                     i1l211:	
  2066                           ;interrupt_manager.c: 60: } else {
  2067                           
  2068  0022  0871               	movf	??_INTERRUPT_InterruptManager,w
  2069  0023  0020               	movlb	0	; select bank0
  2070  0024  00FF               	movwf	127
  2071  0025  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2072  0026  0009               	retfie
  2073  0027                     __end_of_INTERRUPT_InterruptManager:	
  2074                           
  2075                           	psect	text9
  2076  0109                     __ptext9:	
  2077 ;; *************** function _TMR0_ISR *****************
  2078 ;; Defined at:
  2079 ;;		line 103 in file "mcc_generated_files/tmr0.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, pclath, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2093 ;;      Params:         0       0       0       0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    1
  2100 ;; This function calls:
  2101 ;;		_TMR0_CallBack
  2102 ;; This function is called by:
  2103 ;;		_INTERRUPT_InterruptManager
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _TMR0_ISR
  2109  0109                     _TMR0_ISR:	
  2110                           
  2111                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
  2112                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2116  0109  110B               	bcf	11,2	;volatile
  2117                           
  2118                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
  2119  010A  0020               	movlb	0	; select bank0
  2120  010B  0837               	movf	_timer0ReloadVal,w	;volatile
  2121  010C  0095               	movwf	21	;volatile
  2122                           
  2123                           ;tmr0.c: 112: if (++CountCallBack >= 50) {
  2124  010D  3001               	movlw	1
  2125  010E  07B1               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  2126  010F  3000               	movlw	0
  2127  0110  3DB2               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  2128  0111  3000               	movlw	0
  2129  0112  0232               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  2130  0113  3032               	movlw	50
  2131  0114  1903               	skipnz
  2132  0115  0231               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  2133  0116  1C03               	skipc
  2134  0117  0008               	return
  2135                           
  2136                           ;tmr0.c: 114: TMR0_CallBack();
  2137  0118  3181  211E         	fcall	_TMR0_CallBack
  2138                           
  2139                           ;tmr0.c: 117: CountCallBack = 0;
  2140  011A  0020               	movlb	0	; select bank0
  2141  011B  01B1               	clrf	TMR0_ISR@CountCallBack	;volatile
  2142  011C  01B2               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  2143  011D  0008               	return
  2144  011E                     __end_of_TMR0_ISR:	
  2145                           
  2146                           	psect	text10
  2147  011E                     __ptext10:	
  2148 ;; *************** function _TMR0_CallBack *****************
  2149 ;; Defined at:
  2150 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;		None               void
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2164 ;;      Params:         0       0       0       0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0
  2166 ;;      Temps:          1       0       0       0       0       0       0       0
  2167 ;;      Totals:         1       0       0       0       0       0       0       0
  2168 ;;Total ram usage:        1 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_TMR0_ISR
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           
  2178                           ;psect for function _TMR0_CallBack
  2179  011E                     _TMR0_CallBack:	
  2180                           
  2181                           ;tmr0.c: 126: static unsigned char timer_count = 0;
  2182                           ;tmr0.c: 128: Heart_beat_flag = 1;
  2183                           
  2184                           ;incstack = 0
  2185                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
  2186  011E  3001               	movlw	1
  2187  011F  00F0               	movwf	??_TMR0_CallBack
  2188  0120  0870               	movf	??_TMR0_CallBack,w
  2189  0121  00F7               	movwf	_Heart_beat_flag	;volatile
  2190                           
  2191                           ;tmr0.c: 130: if(timer_count++ >= 1){
  2192  0122  3001               	movlw	1
  2193  0123  00F0               	movwf	??_TMR0_CallBack
  2194  0124  0870               	movf	??_TMR0_CallBack,w
  2195  0125  0020               	movlb	0	; select bank0
  2196  0126  07B3               	addwf	TMR0_CallBack@timer_count,f
  2197  0127  0333               	decf	TMR0_CallBack@timer_count,w
  2198  0128  1903               	btfsc	3,2
  2199  0129  0008               	return
  2200                           
  2201                           ;tmr0.c: 131: timer_count = 0;
  2202  012A  01B3               	clrf	TMR0_CallBack@timer_count
  2203                           
  2204                           ;tmr0.c: 132: Transmit_flag = 1;
  2205  012B  3001               	movlw	1
  2206  012C  00F0               	movwf	??_TMR0_CallBack
  2207  012D  0870               	movf	??_TMR0_CallBack,w
  2208  012E  00F8               	movwf	_Transmit_flag	;volatile
  2209  012F  0008               	return
  2210  0130                     __end_of_TMR0_CallBack:	
  2211                           
  2212                           	psect	text11
  2213  0072                     __ptext11:	
  2214 ;; *************** function _EUSART_Transmit_ISR *****************
  2215 ;; Defined at:
  2216 ;;		line 164 in file "mcc_generated_files/eusart.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;		None               void
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2230 ;;      Params:         0       0       0       0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0
  2232 ;;      Temps:          1       0       0       0       0       0       0       0
  2233 ;;      Totals:         1       0       0       0       0       0       0       0
  2234 ;;Total ram usage:        1 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_INTERRUPT_InterruptManager
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           
  2244                           ;psect for function _EUSART_Transmit_ISR
  2245  0072                     _EUSART_Transmit_ISR:	
  2246                           
  2247                           ;eusart.c: 167: if(!eusartTxBufferWorkingFlag || (eusartTxBuffer[eusartTxTail]=='\0')){
  2248                           
  2249                           ;incstack = 0
  2250                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2251  0072  087A               	movf	_eusartTxBufferWorkingFlag,w	;volatile
  2252  0073  1903               	btfsc	3,2
  2253  0074  287C               	goto	i1l143
  2254  0075  087B               	movf	_eusartTxTail,w
  2255  0076  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2256  0077  0086               	movwf	6
  2257  0078  0187               	clrf	7
  2258  0079  0801               	movf	1,w
  2259  007A  1D03               	btfss	3,2
  2260  007B  2882               	goto	i1l845
  2261  007C                     i1l143:	
  2262                           
  2263                           ;eusart.c: 168: PIE1bits.TXIE = 0;
  2264  007C  0021               	movlb	1	; select bank1
  2265  007D  1211               	bcf	17,4	;volatile
  2266                           
  2267                           ;eusart.c: 169: eusartTxBufferWorkingFlag = 0;
  2268  007E  01FA               	clrf	_eusartTxBufferWorkingFlag	;volatile
  2269                           
  2270                           ;eusart.c: 171: RC3=1;
  2271  007F  0020               	movlb	0	; select bank0
  2272  0080  158E               	bsf	14,3	;volatile
  2273                           
  2274                           ;eusart.c: 172: return;
  2275  0081  0008               	return
  2276  0082                     i1l845:	
  2277                           
  2278                           ;eusart.c: 173: }
  2279                           ;eusart.c: 175: TXREG = eusartTxBuffer[eusartTxTail++];
  2280  0082  087B               	movf	_eusartTxTail,w
  2281  0083  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2282  0084  0086               	movwf	6
  2283  0085  0187               	clrf	7
  2284  0086  0801               	movf	1,w
  2285  0087  0023               	movlb	3	; select bank3
  2286  0088  009A               	movwf	26	;volatile
  2287  0089  3001               	movlw	1
  2288  008A  00F0               	movwf	??_EUSART_Transmit_ISR
  2289  008B  0870               	movf	??_EUSART_Transmit_ISR,w
  2290  008C  07FB               	addwf	_eusartTxTail,f
  2291                           
  2292                           ;eusart.c: 176: if((eusartTxTail>=8) || (eusartTxBuffer[eusartTxTail]=='\0')){
  2293  008D  3008               	movlw	8
  2294  008E  027B               	subwf	_eusartTxTail,w
  2295  008F  1803               	skipnc
  2296  0090  2898               	goto	i1l147
  2297  0091  087B               	movf	_eusartTxTail,w
  2298  0092  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2299  0093  0086               	movwf	6
  2300  0094  0187               	clrf	7
  2301  0095  0801               	movf	1,w
  2302  0096  1D03               	btfss	3,2
  2303  0097  0008               	return
  2304  0098                     i1l147:	
  2305                           
  2306                           ;eusart.c: 177: PIE1bits.TXIE = 0;
  2307  0098  0021               	movlb	1	; select bank1
  2308  0099  1211               	bcf	17,4	;volatile
  2309                           
  2310                           ;eusart.c: 178: eusartTxBufferWorkingFlag = 0;
  2311  009A  01FA               	clrf	_eusartTxBufferWorkingFlag	;volatile
  2312  009B  0008               	return
  2313  009C                     __end_of_EUSART_Transmit_ISR:	
  2314                           ;eusart.c: 179: }
  2315                           ;eusart.c: 181: return;
  2316                           
  2317                           
  2318                           	psect	text12
  2319  00D9                     __ptext12:	
  2320 ;; *************** function _EUSART_Receive_ISR *****************
  2321 ;; Defined at:
  2322 ;;		line 184 in file "mcc_generated_files/eusart.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;		None               void
  2329 ;; Registers used:
  2330 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2336 ;;      Params:         0       0       0       0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0       0
  2338 ;;      Temps:          1       0       0       0       0       0       0       0
  2339 ;;      Totals:         1       0       0       0       0       0       0       0
  2340 ;;Total ram usage:        1 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_INTERRUPT_InterruptManager
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _EUSART_Receive_ISR
  2351  00D9                     _EUSART_Receive_ISR:	
  2352                           
  2353                           ;eusart.c: 185: if (1 == RCSTAbits.OERR) {
  2354                           
  2355                           ;incstack = 0
  2356                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2357  00D9  0023               	movlb	3	; select bank3
  2358  00DA  1C9D               	btfss	29,1	;volatile
  2359  00DB  28DE               	goto	i1l861
  2360                           
  2361                           ;eusart.c: 188: RCSTAbits.CREN = 0;
  2362  00DC  121D               	bcf	29,4	;volatile
  2363                           
  2364                           ;eusart.c: 189: RCSTAbits.CREN = 1;
  2365  00DD  161D               	bsf	29,4	;volatile
  2366  00DE                     i1l861:	
  2367                           
  2368                           ;eusart.c: 190: }
  2369                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
  2370  00DE  0819               	movf	25,w	;volatile
  2371  00DF  00F0               	movwf	??_EUSART_Receive_ISR
  2372  00E0  0879               	movf	_eusartRxHead,w
  2373  00E1  3E29               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2374  00E2  0086               	movwf	6
  2375  00E3  0187               	clrf	7
  2376  00E4  0870               	movf	??_EUSART_Receive_ISR,w
  2377  00E5  0081               	movwf	1
  2378  00E6  3001               	movlw	1
  2379  00E7  00F0               	movwf	??_EUSART_Receive_ISR
  2380  00E8  0870               	movf	??_EUSART_Receive_ISR,w
  2381  00E9  07F9               	addwf	_eusartRxHead,f
  2382                           
  2383                           ;eusart.c: 194: if (sizeof (eusartRxBuffer) <= eusartRxHead) {
  2384  00EA  3008               	movlw	8
  2385  00EB  0279               	subwf	_eusartRxHead,w
  2386  00EC  1803               	btfsc	3,0
  2387                           
  2388                           ;eusart.c: 195: eusartRxHead = 0;
  2389  00ED  01F9               	clrf	_eusartRxHead
  2390                           
  2391                           ;eusart.c: 196: }
  2392                           ;eusart.c: 197: eusartRxCount++;
  2393  00EE  3001               	movlw	1
  2394  00EF  00F0               	movwf	??_EUSART_Receive_ISR
  2395  00F0  0870               	movf	??_EUSART_Receive_ISR,w
  2396  00F1  0020               	movlb	0	; select bank0
  2397  00F2  07B4               	addwf	_eusartRxCount,f	;volatile
  2398  00F3  0008               	return
  2399  00F4                     __end_of_EUSART_Receive_ISR:	
  2400  007E                     btemp	set	126	;btemp
  2401  007E                     int$flags	set	126
  2402  007E                     wtemp	set	126
  2403  007E                     wtemp0	set	126
  2404  0080                     wtemp1	set	128
  2405  0082                     wtemp2	set	130
  2406  0084                     wtemp3	set	132
  2407  0086                     wtemp4	set	134
  2408  0088                     wtemp5	set	136
  2409  007F                     wtemp6	set	127
  2410  007E                     ttemp	set	126
  2411  007E                     ttemp0	set	126
  2412  0081                     ttemp1	set	129
  2413  0084                     ttemp2	set	132
  2414  0087                     ttemp3	set	135
  2415  007F                     ttemp4	set	127
  2416  007E                     ltemp	set	126
  2417  007E                     ltemp0	set	126
  2418  0082                     ltemp1	set	130
  2419  0086                     ltemp2	set	134
  2420  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         27
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2      26
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART_str_Write@txData	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _sendUart->_EUSART_str_Write
    _SYSTEM_Initialize->_EUSART_Initilize
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _sendUart->_EUSART_str_Write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     254
                  _SYSTEM_Initialize
                           _sendUart
 ---------------------------------------------------------------------------------
 (1) _sendUart                                             0     0      0     254
                   _EUSART_str_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_str_Write                                     7     5      2     254
                                              2 COMMON     5     3      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EUSART_Initilize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initilize                                     1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (5) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initilize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _sendUart
     _EUSART_str_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      26       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      1A       6       32.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      26      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Nov 28 17:34:14 2015

                        __CFG_CP$OFF 0000                      _timer0ReloadVal 0037  
                        __CFG_LVP$ON 0000                                  l937 003C  
                                l939 0041                                  l949 006A  
                                l981 0105                                  l975 00FE  
                                _RC0 0070                                  _RC1 0071  
                                _RC2 0072                                  _RC3 0073  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                                 STR_1 0156  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _TMR0 0015  
                               _WPUA 020C                                 _WPUB 020D  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 00F4                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0027                                 ttemp 007E  
                               wtemp 007E                        __CFG_MCLRE$ON 0000  
            __end_of_TMR0_Initialize 013F       __size_of_OSCILLATOR_Initialize 0005  
      __end_of_OSCILLATOR_Initialize 0167                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                i1l211 0022  
                              i1l205 0010                                i1l143 007C  
                              i1l207 001A                                i1l147 0098  
                              i1l861 00DE                                i1l845 0082  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TXREG 019A  
                              _TXSTA 019E                     __end_of_TMR0_ISR 011E  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      __initialization 0029  
                       __end_of_main 0109                       __CFG_LPBOR$OFF 0000  
        ?_INTERRUPT_InterruptManager 0070             __end_of_EUSART_str_Write 0072  
                             ??_main 0077                               _APFCON 011D  
                             _ANSELA 018C                               _ANSELB 018D  
                             _ANSELC 018E                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                _EUSART_Transmit_ISR 0072                     ?_TMR0_Initialize 0070  
                   __end_of_sendUart 0156             TMR0_CallBack@timer_count 0033  
                  ?_EUSART_Initilize 0070                __end_of_TMR0_CallBack 0130  
                 ??_EUSART_Initilize 0072                 ?_EUSART_Transmit_ISR 0070  
                  _SYSTEM_Initialize 013F              __end_of__initialization 0035  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073                            ?_TMR0_ISR 0070  
                     _OPTION_REGbits 0095                TMR0_ISR@CountCallBack 0031  
          __end_of_SYSTEM_Initialize 014B                ??_EUSART_Transmit_ISR 0070  
                         __pbssBANK0 0020          __size_of_EUSART_Receive_ISR 001B  
                         __pmaintext 00F4                           ??_TMR0_ISR 0071  
                         __pintentry 0004                              _BAUDCON 019F  
                      _eusartRxCount 0034                              _OSCSTAT 009A  
                          ?_sendUart 0070                              __ptext1 014B  
                            __ptext2 0039                              __ptext3 013F  
                            __ptext4 0130                              __ptext5 009C  
                            __ptext6 0162                              __ptext7 00BE  
                            __ptext9 0109                    ?_EUSART_str_Write 0072  
              _OSCILLATOR_Initialize 0162                   ??_EUSART_str_Write 0074  
           ??_PIN_MANAGER_Initialize 0072           __size_of_SYSTEM_Initialize 000C  
                            clrloop0 015D                 end_of_initialization 0035  
             EUSART_str_Write@txData 0072                           ??_sendUart 0077  
                          _RCSTAbits 019D                         __pstringtext 0156  
                   __CFG_FOSC$INTOSC 0000            __size_of_EUSART_Initilize 001B  
                  __size_of_TMR0_ISR 0015            _eusartTxBufferWorkingFlag 007A  
             ?_OSCILLATOR_Initialize 0070                  start_initialization 0029  
           __size_of_TMR0_Initialize 000F      __size_of_PIN_MANAGER_Initialize 0022  
             __size_of_TMR0_CallBack 0012          __end_of_EUSART_Transmit_ISR 009C  
                        __pbssCOMMON 0077                            ___latbits 0002  
                      __pcstackBANK0 0038           __end_of_EUSART_Receive_ISR 00F4  
                          __pnvBANK0 0036               _PIN_MANAGER_Initialize 009C  
                  __size_of_sendUart 000B                      _Heart_beat_flag 0077  
                       _eusartRxHead 0079                         _eusartRxTail 0035  
                       _eusartTxTail 007B         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 0036                        _TMR0_CallBack 011E  
                     _eusartRxBuffer 0029            __size_of_EUSART_str_Write 0039  
                  ??_TMR0_Initialize 0072                       _eusartTxBuffer 0020  
                          clear_ram0 015C                             _PIE1bits 0091  
__size_of_INTERRUPT_InterruptManager 0023                     _EUSART_Initilize 00BE  
                           _PIR1bits 0011                             _TMR0_ISR 0109  
                     ?_TMR0_CallBack 0070              ??_OSCILLATOR_Initialize 0072  
                           __ptext10 011E                             __ptext11 0072  
                           __ptext12 00D9                        __size_of_main 0015  
                           _sendUart 014B                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0027           _INTERRUPT_InterruptManager 0004  
                         _INTCONbits 000B                      ??_TMR0_CallBack 0070  
                           intlevel1 0000                     _EUSART_str_Write 0039  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                      _Transmit_flag 0078                   _EUSART_Receive_ISR 00D9  
                         _OPTION_REG 0095                  ?_EUSART_Receive_ISR 0070  
                    _TMR0_Initialize 0130             __end_of_EUSART_Initilize 00D9  
       __size_of_EUSART_Transmit_ISR 002A       __end_of_PIN_MANAGER_Initialize 00BE  
                  EUSART_str_Write@i 0038                 ??_EUSART_Receive_ISR 0070  
